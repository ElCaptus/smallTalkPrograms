Object subclass: #Combustible	instanceVariableNames: 'nombre precioPorLitro'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1 - EjercicioDeParcial'!!Combustible commentStamp: 'Marcos9098 10/1/2019 00:02' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  Statsdfe a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	nombre:		<Object>	precioPorLitro:		<Object>    Implementation Points!!Combustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 00:02'!precio ^precioPorLitro! !!Combustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 00:03'!nombre^nombre! !!Combustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 16:30'!nombre: unNombre precioPorLitro: unPrecionombre:= unNombre. precioPorLitro:= unPrecio.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Combustible class	instanceVariableNames: ''!!Combustible class methodsFor: 'initialization' stamp: 'Marcos9098 10/1/2019 16:30'!nombre: unNombre precioPorLitro: unPrecio^(self new) nombre: unNombre precioPorLitro: unPrecio.! !Object subclass: #DespachoDeCombustible	instanceVariableNames: 'cantidadDeLitros fecha combustible'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1 - EjercicioDeParcial'!!DespachoDeCombustible commentStamp: 'Marcos9098 10/1/2019 00:04' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".dgFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadDeLitros:		<Object>	combustible:		<Object>	fecha:		<Object>    Implementation Points!!DespachoDeCombustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 00:04'!precioTotal ^cantidadDeLitros * combustible precio! !!DespachoDeCombustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 18:12'!initialize fecha:=Date today! !!DespachoDeCombustible methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 19:03'!litros: lit combustible: combcantidadDeLitros:= lit. combustible:= comb. fecha:= Date today ! !!DespachoDeCombustible methodsFor: 'accessing' stamp: 'Marcos9098 10/1/2019 00:07'!combustible^combustible! !!DespachoDeCombustible methodsFor: 'accessing' stamp: 'Marcos9098 10/1/2019 18:34'!fecha ^fecha! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DespachoDeCombustible class	instanceVariableNames: ''!!DespachoDeCombustible class methodsFor: 'initialization' stamp: 'Marcos9098 10/1/2019 16:37'!litros: lit combustible: comb^self new litros:lit combustible: comb.! !Object subclass: #EstacionDeServicio	instanceVariableNames: 'surtidores'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1 - EjercicioDeParcial'!!EstacionDeServicio commentStamp: 'Marcos9098 9/30/2019 23:37' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:sFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	surtidores:		<Object>    Implementation Points!!EstacionDeServicio methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 17:30'!ventaTotalDelDia	^surtidores sum:		[ :x | x ventaTotalDelDia].! !!EstacionDeServicio methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 18:47'!ventaDelDia	^surtidores sum:		[ :x | x ventaDelDia].! !!EstacionDeServicio methodsFor: 'public' stamp: 'Marcos9098 9/30/2019 23:39'!agregarSurtidor: unSurtidorsurtidores add: unSurtidor.! !!EstacionDeServicio methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 00:13'!initialize surtidores:= OrderedCollection new.! !Object subclass: #Surtidor	instanceVariableNames: 'cantidadDeCombustible combustible ventas'	classVariableNames: ''	poolDictionaries: ''	category: 'Objetos1 - EjercicioDeParcial'!!Surtidor commentStamp: 'Marcos9098 9/30/2019 23:37' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:sFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	cantidadDeCombustible:		<Object>    Implementation Points!!Surtidor methodsFor: 'public' stamp: 'Marcos9098 9/30/2019 23:59'!cantidadDeCombustibleActual^cantidadDeCombustible ! !!Surtidor methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 00:01'!combustible^combustible! !!Surtidor methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 17:43'!recargarTanqueDeCombustible: cantidadcantidadDeCombustible := cantidadDeCombustible + cantidad.! !!Surtidor methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 19:31'!realizarDespachoPorDinero: unMonto	cantidadDeCombustible - (unMonto / combustible precio) > 0		ifFalse: [ ^ self ].	ventas		add:			(DespachoDeCombustible				litros: unMonto / combustible precio				combustible: combustible).	cantidadDeCombustible := cantidadDeCombustible		- (unMonto / combustible precio)! !!Surtidor methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 19:34'!ventaDelDia|x y| x:=ventas select: [:l| l fecha = Date today ]. y:= x sum:[:l | l precioTotal.] . ^y! !!Surtidor methodsFor: 'initialization' stamp: 'Marcos9098 10/1/2019 18:11'!initialize ventas:= OrderedCollection new.cantidadDeCombustible :=0! !!Surtidor methodsFor: 'accessing' stamp: 'Marcos9098 10/1/2019 18:11'!combustible: unCcombustible:= unC.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Surtidor class	instanceVariableNames: ''!!Surtidor class methodsFor: 'public' stamp: 'Marcos9098 10/1/2019 18:10'!combustible: combustible ^self new combustible: combustible.! !